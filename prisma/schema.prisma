generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model User {
  id                      String                   @id @default(uuid())
  name                    String
  email                   String                   @unique
  password                String
  isVerified              Boolean                  @default(false)
  isActive                Boolean                  @default(true)
  role                    Role                     @default(USER)
  avatar                  String?
  phone                   String?
  birthDate               DateTime?
  createdAt               DateTime                 @default(now())
  updatedAt               DateTime                 @updatedAt
  lastLoginAt             DateTime?
  balance                 Decimal                  @default(1000) @db.Decimal(18, 8)
  referralCode            String?                  @unique
  referredBy              String?
  emailVerifiedAt         DateTime?
  referredById            String?
  tokenExpiry             DateTime?
  verificationToken       String?
  emailVerificationTokens EmailVerificationToken[] @relation("UserEmailVerificationTokens")
  orders                  orders[]
  passwordResetTokens     PasswordResetToken[]     @relation("UserPasswordResetTokens")
  sessions                UserSession[]
  users                   User?                    @relation("usersTousers", fields: [referredById], references: [id])
  other_users             User[]                   @relation("usersTousers")
  withdrawals             withdrawals[]

  @@index([referredById], map: "idx_users_referredbyid")
  @@map("users")
}

model UserSession {
  id        String   @id @default(uuid())
  userId    String
  token     String   @unique
  expiresAt DateTime
  isActive  Boolean  @default(true)
  userAgent String?
  ipAddress String?
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("user_sessions")
}

model SystemConfig {
  id        String     @id @default(uuid())
  key       String     @unique
  value     String
  type      ConfigType @default(STRING)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @default(now()) @updatedAt

  @@map("system_configs")
}

model EmailVerificationToken {
  id        String   @id @default(uuid())
  token     String   @unique
  userId    String
  expiresAt DateTime
  used      Boolean  @default(false)
  createdAt DateTime @default(now())
  user      User     @relation("UserEmailVerificationTokens", fields: [userId], references: [id], onDelete: Cascade)

  @@map("email_verification_tokens")
}

model PasswordResetToken {
  id        String   @id @default(uuid())
  token     String   @unique
  userId    String
  expiresAt DateTime
  used      Boolean  @default(false)
  createdAt DateTime @default(now())
  user      User     @relation("UserPasswordResetTokens", fields: [userId], references: [id], onDelete: Cascade)

  @@map("password_reset_tokens")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model affiliate_referrals {
  parent_user_id   String   @db.Uuid
  referred_user_id String   @db.Uuid
  created_at       DateTime @db.Timestamptz(6)

  @@index([parent_user_id, created_at(sort: Desc)], map: "idx_aff_refs_parent_created")
  @@ignore
}

model commission_ledger {
  id                String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id           String?   @db.Uuid
  amount_usdt       Decimal   @db.Decimal
  created_at        DateTime  @default(now()) @db.Timestamptz(6)
  is_affiliate      Boolean   @default(true)
  affiliate_user_id String?
  referred_user_id  String?
  order_id          String?
  is_paid           Boolean   @default(false)
  paid_at           DateTime? @db.Timestamptz(6)
  createdAt         DateTime  @default(now()) @db.Timestamptz(6)

  @@index([user_id, created_at(sort: Desc)], map: "idx_commission_user_created")
}

model orders {
  id                String   @id @default(dbgenerated("gen_random_uuid()"))
  userId            String
  amount            Decimal  @db.Decimal(18, 8)
  status            String
  createdAt         DateTime @default(now())
  description       String?
  updatedAt         DateTime
  realized_pnl_usdt Decimal  @default(0) @db.Decimal(20, 6)
  users             User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId, createdAt], map: "idx_orders_userid_createdat")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model referrals {
  parent_user_id   String   @db.Uuid
  referred_user_id String   @db.Uuid
  created_at       DateTime @db.Timestamptz(6)

  @@index([parent_user_id, created_at(sort: Desc)], map: "idx_referrals_parent_created")
  @@ignore
}

model withdrawals {
  id             String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userId         String
  amount_usdt    Decimal  @db.Decimal(20, 6)
  fee_house_usdt Decimal  @default(0) @db.Decimal(20, 6)
  status         String   @default("pending")
  createdAt      DateTime @default(now()) @db.Timestamptz(6)
  updatedAt      DateTime @default(now()) @db.Timestamptz(6)
  users          User     @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "withdrawals_userid_fkey")
}

enum Role {
  USER
  ADMIN
  MODERATOR
}

enum ConfigType {
  STRING
  NUMBER
  BOOLEAN
  JSON
}
